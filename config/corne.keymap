/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYOUTS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sl 3>, <&tog 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
     &kp TAB  &kp Q  &kp W             &kp E  &kp R           &kp T      &kp Y  &kp U                    &kp I    &kp O     &kp P              &kp BSPC
     &kp ESC  &kp A  &kp S             &kp D  &kp F           &kp G      &kp H  &kp J                    &kp K    &kp L  &kp SEMI               &kp SQT
&kp LEFT_ALT  &kp Z  &kp X             &kp C  &kp V           &kp B      &kp N  &kp M                &kp COMMA  &kp DOT  &kp FSLH  &mt LEFT_SHIFT ENTER
                            &kp LEFT_CONTROL  &mo 1  &kp LEFT_SHIFT  &kp SPACE  &mo 2  &mt RIGHT_GUI RG(SPACE)
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp GRAVE      &kp N1      &kp N2      &kp N3  &kp N4          &kp N5    &kp N6             &kp N7         &kp N8     &kp N9            &kp N0              &kp BSPC
    &kp CAPS      &trans      &trans      &trans  &trans          &trans  &kp LEFT           &kp DOWN         &kp UP  &kp RIGHT  &kp LEFT_BRACKET     &kp RIGHT_BRACKET
&kp LEFT_ALT  &kp C_MUTE  &kp C_PREV  &kp C_NEXT  &trans          &trans    &trans             &trans      &kp MINUS  &kp EQUAL     &kp BACKSLASH  &mt LEFT_SHIFT ENTER
                                          &trans  &trans  &kp LEFT_SHIFT     &td0  &kp RIGHT_CONTROL  &kp RIGHT_GUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp TILDE  &kp EXCL             &kp AT         &kp HASH      &kp DLLR       &kp PRCNT  &kp CARET  &kp AMPS   &kp ASTERISK   &kp LPAR        &kp RPAR           &trans
      &trans    &trans      &kp LA(LG(X))    &kp LA(LG(C))        &trans   &kp LA(LG(G))   &kp LEFT  &kp DOWN         &kp UP  &kp RIGHT  &kp LEFT_BRACE  &kp RIGHT_BRACE
&kp LEFT_ALT  &kp C_PP  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP        &trans          &trans     &trans    &trans      &kp UNDER   &kp PLUS        &kp PIPE           &trans
                                                 &kp LCTRL  &kp LEFT_GUI  &kp LEFT_SHIFT     &trans    &trans  &kp RIGHT_GUI
            >;
        };

        Layer__3 {
            bindings = <
   &kp F12        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5  &kp F6            &kp F7             &kp F8  &kp F9  &kp F10  &kp F11
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &ext_power EP_ON  &ext_power EP_OFF  &trans   &trans   &trans
    &trans        &trans        &trans        &trans        &trans        &trans  &trans            &trans             &trans  &trans   &trans   &trans
                                              &trans        &trans        &trans  &trans            &trans             &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans   &kp Z  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
